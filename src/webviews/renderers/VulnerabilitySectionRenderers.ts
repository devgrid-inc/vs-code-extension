import type { DevGridVulnerabilityDetails, DevGridVulnerabilityIdentifier } from '../../types';
import { escapeHtml, escapeAttribute, formatScore, formatJsonForDisplay } from '../helpers/VulnerabilityHelpers';

export function renderMetadataSection(details: DevGridVulnerabilityDetails): string {
  const rows: string[] = [];
  if (details.status) rows.push(`<div><strong>Status:</strong> ${escapeHtml(details.status)}</div>`);
  if (details.originatingSystem) rows.push(`<div><strong>Source:</strong> ${escapeHtml(details.originatingSystem)}</div>`);
  if (details.originatingSystemId) rows.push(`<div><strong>Source ID:</strong> ${escapeHtml(details.originatingSystemId)}</div>`);
  if (details.scanType) rows.push(`<div><strong>Scan Type:</strong> ${escapeHtml(details.scanType)}</div>`);
  if (details.location) rows.push(`<div><strong>Location:</strong> ${escapeHtml(details.location)}</div>`);
  if (details.openDate) rows.push(`<div><strong>Opened:</strong> ${escapeHtml(details.openDate)}</div>`);
  if (details.closeDate) rows.push(`<div><strong>Closed:</strong> ${escapeHtml(details.closeDate)}</div>`);
  if (rows.length === 0) return '';
  return `
    <div class="section">
      <div class="section-title">Metadata</div>
      <div class="metadata-grid">${rows.join('')}</div>
    </div>
  `;
}

export function renderIdentifiersSection(identifiers?: DevGridVulnerabilityIdentifier[]): string {
  if (!identifiers || identifiers.length === 0) return '';
  const cards = identifiers.map((id, idx) => renderIdentifierCard(id, idx)).join('');
  return `
    <div class="section">
      <div class="section-title">Identifiers</div>
      <div class="metadata-grid">${cards}</div>
    </div>
  `;
}

export function renderIdentifierCard(identifier: DevGridVulnerabilityIdentifier, index?: number): string {
  const title = identifier.type ? `${escapeHtml(identifier.type)}: ${escapeHtml(identifier.value ?? '')}` : escapeHtml(identifier.value ?? '');
  const link = identifier.url ? `<a href="#" class="identifier-link" onclick="openUrl('${escapeAttribute(identifier.url)}')">Open</a>` : '';
  return `
    <div class="identifier-card" data-index="${index ?? 0}">
      <div class="identifier-title">${title}</div>
      ${link}
    </div>
  `;
}

export function renderAttributesSection(attributes: unknown): string {
  if (!attributes) return '';
  try {
    const json = formatJsonForDisplay(attributes);
    return `
      <div class="section">
        <div class="section-title">Attributes</div>
        <pre>${escapeHtml(json)}</pre>
      </div>
    `;
  } catch {
    return '';
  }
}

export function renderCvssSection(cvss?: { baseScore?: number; vector?: string }): string {
  if (!cvss) return '';
  const score = formatScore(cvss.baseScore) ?? 'N/A';
  const vector = cvss.vector ? `<div class="cvss-vector">${escapeHtml(cvss.vector)}</div>` : '';
  return `
    <div class="section">
      <div class="section-title">CVSS Score</div>
      <div class="cvss-score">${score}</div>
      ${vector}
    </div>
  `;
}

export function renderRemediationSection(remediation?: { fixedVersion?: string; advice?: string }): string {
  if (!remediation) return '';
  const parts: string[] = [];
  if (remediation.fixedVersion) parts.push(`<div class="remediation-title">Fixed Version:</div><div>${escapeHtml(remediation.fixedVersion)}</div>`);
  if (remediation.advice) parts.push(`<div class="remediation-title" style="margin-top: 10px;">Advice:</div><div>${escapeHtml(remediation.advice)}</div>`);
  if (parts.length === 0) return '';
  return `
    <div class="section">
      <div class="section-title">Remediation</div>
      <div class="remediation">${parts.join('')}</div>
    </div>
  `;
}

export function renderReferencesSection(references?: Array<{ title?: string; url?: string }>): string {
  if (!references || references.length === 0) return '';
  const items = references.map(ref => `
    <div class="reference">
      <a href="#" class="reference-link" onclick="openUrl('${escapeAttribute(ref.url ?? '')}')">
        ${ref.title ? escapeHtml(ref.title) : 'Reference'}
      </a>
    </div>
  `).join('');
  return `
    <div class="section">
      <div class="section-title">References</div>
      <div class="references">${items}</div>
    </div>
  `;
}


